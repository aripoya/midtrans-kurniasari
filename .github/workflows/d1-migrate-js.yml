name: Run D1 JS Migration (Manual)

on:
  workflow_dispatch:
    inputs:
      scriptPath:
        description: 'Path to JS migration (e.g., migrations/0021_drop_pickup_outlet.js)'
        required: true
        default: 'migrations/0021_drop_pickup_outlet.js'
      workerName:
        description: 'Temporary Worker name'
        required: true
        default: 'd1-js-migration-0021'

jobs:
  migrate_js:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy temporary migration Worker
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >-
            deploy "${{ github.event.inputs.scriptPath }}" --name "${{ github.event.inputs.workerName }}" --env production

      - name: Get Worker URL
        id: get_url
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >-
            deployments list --name "${{ github.event.inputs.workerName }}" --env production

      - name: Parse URL from output
        id: parse
        run: |
          set -euo pipefail
          # GitHub does not give us step stdout directly; re-run a lightweight list to capture URL
          OUT=$(npx --yes wrangler@4 deployments list --name "${{ github.event.inputs.workerName }}" --env production || true)
          URL=$(echo "$OUT" | grep -Eo 'https://[^ ]+workers.dev' | head -n1 || true)
          echo "Detected URL: $URL"
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Invoke migration
        run: |
          set -euo pipefail
          URL="${{ steps.parse.outputs.url }}"
          if [ -z "$URL" ]; then
            echo "Failed to detect workers.dev URL; cannot invoke automatically." >&2
            exit 1
          fi
          echo "Invoking $URL"
          curl -svS "$URL" || true

      - name: Remove temporary Worker
        if: always()
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: >-
            delete "${{ github.event.inputs.workerName }}" --env production
